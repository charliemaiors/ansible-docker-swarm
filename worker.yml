- include: worker-ubuntu.yml
- name: common play for workers
  hosts: workers
  serial: 2
  tasks:
    - set_fact:
        swarm_join_token: "{{ lookup('ini', 'join_token section=docker file=worker') }}"
        swarm_manager_ip: "{{ lookup('ini', 'manager_ip section=docker file=worker') }}"
    - name: enable epel-release
      become: yes
      yum:
        name: epel-release
        state: latest
      when:
        - ansible_distribution == "CentOS"
    - name: installing packages centos
      become: yes
      yum: pkg={{item}} state=latest
      with_items:
        - curl
        - python
        - git
        - python-pip
        - ansible
      when:
        - ansible_distribution == "CentOS"
    - name: installing packages ubuntu
      become: yes
      apt: name={{item}} state=latest
      with_items:
        - curl
        - python
        - git
        - python-pip
        - ansible
      when:
        - (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian")
    - name: install docker-py
      become: yes
      shell: pip install 'docker-py>=1.7.0'
      args:
        executable: /bin/bash
    - name: install docker engine
      shell: curl -sSL https://get.docker.com/ | sh
      args:
        executable: /bin/bash
    - name: enable docker without sudo
      become: yes
      shell: usermod -aG docker "{{ ansible_env.USER }}"
      args:
        executable: /bin/bash
    - name: restart docker
      become: yes
      service:
        name: docker
        state: restarted
    - name: login on custom docker registry
      docker_login:
        registry_url: https://dockerdemo.ddns.net
        username: demo
        password: demo
        reauthorize: yes
    - name: join docker swarm
      become: yes
      shell: "docker swarm join --token {{ swarm_join_token }} {{ swarm_manager_ip }}:2377"
      args:
        executable: /bin/bash 

- import_playbook: worker-ubuntu.yml
- import_playbook: worker-windows.yml
- name: common play for workers
  hosts: workers
  vars:
    all_floating: "n"
  tasks:
    - name: enable epel-release
      become: yes
      yum:
        name: epel-release
        state: latest
      when:
        - ansible_distribution == "CentOS"
    - name: installing packages centos
      become: yes
      yum: pkg={{item}} state=latest
      with_items:
        - curl
        - python
        - git
        - python-pip
      when:
        - ansible_distribution == "CentOS"
    - name: installing packages ubuntu
      become: yes
      apt: name={{item}} state=latest
      with_items:
        - curl
        - python
        - git
        - python-pip
      when:
        - (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian")
    - name: install docker-py
      become: yes
      shell: pip install 'docker-py>=1.7.0'
      args:
        executable: /bin/bash
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: get docker script
      become: yes       
      get_url:         
        url: https://get.docker.com/         
        dest: "{{ ansible_env.HOME }}/docker.sh"
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: Changing perm of docker script, adding "+x"
      become: yes
      file: dest="{{ ansible_env.HOME }}/docker.sh" mode=a+x
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: install docker engine
      become: yes        
      shell: ./docker.sh       
      args:
        chdir: "{{ ansible_env.HOME }}"
        executable: /bin/bash
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: enable docker without sudo
      become: yes
      user: name="{{ ansible_env.USER }}" groups=docker append=yes
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: Kill SSH
      shell: sleep 1; pkill -u {{ ansible_ssh_user }} sshd
      async: 3
      poll: 2
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: restart docker
      become: yes
      service:
        name: docker
        state: restarted
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: join docker swarm
      shell: "docker swarm join --token {{ swarm_join_token }} {{ manager_ip }}:2377"
      args:
        executable: /bin/bash 
      when: (ansible_distribution == "Ubuntu") or (ansible_distribution == "Debian") or (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")
    - name: join docker swarm windows hosts
      win_shell: docker swarm join --token {{ swarm_join_token }} {{ manager_ip }}:2377
      when:
        - ansible_os_family == "Windows"

- hosts: docker
  tasks:
    - name: enable epel-release
      become: yes
      yum:
        name: epel-release
        state: latest
    - name: installing packages
      become: yes
      yum: pkg={{item}} state=latest
      with_items:
        - curl
        - python
        - git
        - python-pip
        - ansible
    - name: install docker-py
      become: yes
      shell: pip install 'docker-py>=1.7.0'
      args:
        executable: /bin/bash
    - name: install docker engine
      shell: curl -sSL https://get.docker.com/ | sh
      args:
        executable: /bin/bash 
    - name: enable docker without sudo
      become: yes
      shell: usermod -aG docker centos
      args:
        executable: /bin/bash
    - name: create docker configuration directory
      become: yes
      file: path=/etc/systemd/system/docker.service.d state=directory
    - name: copy files
      become: yes
      copy: src={{ item.src }} dest={{ item.dest }}
      with_items:
        - { src: /home/carlo/.ssh/trystack-maior.pem, dest: "{{ ansible_env.HOME }}/.ssh/trystack-maior.pem" }
        - { src: /home/carlo/trystack-ansible/hosts, dest: /etc/ansible/hosts }
        - { src: /home/carlo/trystack-ansible/worker.yml, dest: "{{ ansible_env.HOME }}/worker.yml" }
        - { src: /home/carlo/trystack-ansible/docker.conf, dest: /etc/systemd/system/docker.service.d/docker.conf }
    - name: restart docker and reload conf
      become: yes
      systemd:
        name: docker
        state: restarted
        daemon-reload: yes
    - name: login on custom docker registry
      become: yes
      docker_login:
        registry_url: https://dockerdemo.ddns.net
        username: demo
        password: demo
        reauthorize: yes
    - name: initialize docker swarm
      become: yes
      shell: docker swarm init
      args:
        executable: /bin/bash
    - name: get worker join token
      become: yes
      command: docker swarm join-token worker -q
      register: join_token
    - name: insert join token in ini file
      ini_file:
        dest: "{{ ansible_env.HOME }}/worker"
        section: docker
        option: join_token
        value: "{{ join_token.stdout }}"
    - name: insert manager ip address in ini file
      ini_file:
        dest: "{{ ansible_env.HOME }}/worker"
        section: docker
        option: manager_ip
        value: "{{ ansible_default_ipv4.address }}"
